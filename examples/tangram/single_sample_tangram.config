manifest {
   name = 'SpatialNF'
   description = 'Spatial transcriptomics NextFlow pipelines'
   homePage = 'https://github.com/aertslab/SpatialNF'
   version = ''
   mainScript = 'main.nf'
   defaultBranch = 'master'
   nextflowVersion = '!>=20.10.0'
}

params {
   global {
      project_name = 'MouseCortex'
      outdir = 'out'
      species = 'mouse'
      genome {
         assembly = 'mm10'
      }
   }
   misc {
      test {
         enabled = false
      }
   }
   utils {
      container = 'vibsinglecellnf/utils:0.4.0'
      file_converter {
         off = 'h5ad'
         tagCellWithSampleId = true
         remove10xGEMWell = false
         useFilteredMatrix = true
         makeVarIndexUnique = false
         iff = 'spatial_csv'
      }
      publish {
         compressionLevel = 6
         annotateWithBatchVariableName = false
         mode = 'link'
      }
      scope {
         genome = 'mm10'
         tree {
            level_1 = 'mouse'
            level_2 = 'cortex'
            level_3 = 'tangram'
         }
      }
   }
   tools {
      scanpy {
         container = 'vibsinglecellnf/scanpy:1.8.1'
         report {
            annotations_to_plot = []
         }
         feature_selection {
            report_ipynb = '/src/scanpy/bin/reports/sc_select_variable_genes_report.ipynb'
            flavor = 'seurat'
            minMean = 0.0125
            maxMean = 3
            minDisp = 0.5
            off = 'h5ad'
            subsetHvg = false
         }
         feature_scaling {
            method = 'zscore_scale'
            maxSD = 10
            off = 'h5ad'
         }
         neighborhood_graph {
            nPcs = 50
            off = 'h5ad'
         }
         dim_reduction {
            report_ipynb = '/src/scanpy/bin/reports/sc_dim_reduction_report.ipynb'
            pca {
               method = 'pca'
               nComps = 50
               off = 'h5ad'
               useHvg = false
            }
            umap {
               method = 'umap'
               off = 'h5ad'
            }
            tsne {
               method = 'tsne'
               off = 'h5ad'
            }
         }
         clustering {
            preflight_checks = true
            report_ipynb = '/src/scanpy/bin/reports/sc_clustering_report.ipynb'
            method = 'louvain'
            resolution = 0.8
            off = 'h5ad'
         }
         marker_genes {
            method = 'wilcoxon'
            ngenes = 0
            groupby = 'louvain'
            off = 'h5ad'
         }
         filter {
            report_ipynb = '/src/scanpy/bin/reports/sc_filter_qc_report.ipynb'
            cellFilterStrategy = 'fixedthresholds'
            cellFilterMinNGenes = 3
            cellFilterMaxNGenes = 4000
            cellFilterMaxPercentMito = 0.15
            geneFilterMinNCells = 3
            off = 'h5ad'
            outdir = 'out'
         }
         data_transformation {
            method = 'log1p'
            off = 'h5ad'
         }
         normalization {
            method = 'cpx'
            targetSum = 10000
            off = 'h5ad'
         }
      }
      tangram {
         container = 'nhecker/tangram-sc:1.0.2'
         off = 'h5ad'
         annotation = 'BRAIN_cell_type'
         gene_selection_method = 'all'
         rank_gene_method = 'wilcoxon'
         number_genes = 100
         qvalue = 0.05
         max_sparsity = 0.5
         mapping_mode = 'cells'
         normalize_scRNAseq = true
         normalize_spatial = true
         project_gex = false
         device = 'any'
         report_ipynb = '/src/tangram/bin/reports/tangram_celltype_projection_report.ipynb'
         normalize_celltype_scores = true
         quantile_mapping_score = 0.95
         squidpy_statistics = true
      }
      squidpy {
         container = 'gapartel/squidpy:1.1.2.dev'
         report {
            annotations_to_plot = ['tangram_best_BRAIN_cell_type']
         }
         spatial_graph {
            spatial_key = 'spatial'
            coord_type = 'grid'
            off = 'h5ad'
         }
         spatial_statistics {
            report_ipynb = '/src/squidpy/bin/reports/spatial_squidpy_statistics.ipynb'
            cluster_key = 'tangram_best_BRAIN_cell_type'
            connectivity_key = 'spatial'
            off = 'h5ad'
         }
         lr_analysis {
            cluster_key = 'tangram_best_BRAIN_cell_type'
            off = 'h5ad'
         }
      }
   }
   data {
      spatial_csv = '/lustre1/project/stg_00002/lcb/nhecker/software/git/SpatialNF/examples/data/mouse_cortex_molecular_cartography/A1/outs'
      reference_data {
         file_path = '/lustre1/project/stg_00002/lcb/nhecker/software/git/SpatialNF/examples/data/reference_scRNAseq/Kleshchevnikov2022_mouseCortex_scRNAseq_98genes.h5ad'
         suffix = 'h5ad'
      }
   }
}

process {
   executor = 'local'
   cpus = 2
   memory = '60 GB'
   clusterOptions = '-A cluster_account'
   withLabel:compute_resources__default {
      time = '1h'
   }
   withLabel:compute_resources__minimal {
      cpus = 1
      memory = '1 GB'
   }
   withLabel:compute_resources__mem {
      cpus = 4
      memory = '160 GB'
   }
   withLabel:compute_resources__cpu {
      cpus = 20
      memory = '80 GB'
   }
   withLabel:compute_resources__report {
      maxForks = 2
      cpus = 1
      memory = '160 GB'
   }
   withLabel:compute_resources__24hqueue {
      time = '24h'
   }
   withLabel:compute_resources__gpu {
      memory = '60 GB'
      cpus = 1
      maxForks = 1
      containerOptions = '--nv'
   }
}

timeline {
   enabled = true
   file = 'out/nextflow_reports/execution_timeline.html'
}

report {
   enabled = true
   file = 'out/nextflow_reports/execution_report.html'
}

trace {
   enabled = true
   file = 'out/nextflow_reports/execution_trace.txt'
}

dag {
   enabled = true
   file = 'out/nextflow_reports/pipeline_dag.svg'
}

min {
   enabled = false
}

vsc {
   enabled = false
}

singularity {
   enabled = true
   autoMounts = true
   runOptions = '--cleanenv -H $PWD -B ${HOME},/lustre1,/scratch,/staging'
}
